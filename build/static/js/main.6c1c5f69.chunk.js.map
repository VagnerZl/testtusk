{"version":3,"sources":["components/Load.js","components/MoreInfo.js","components/Add.js","components/Find.js","components/Table.js","components/Pagination.js","App.js","reportWebVitals.js","index.js"],"names":["Load","props","useState","setError","disabled","butdiss","onClick","updateData","fetch","url","then","res","json","result","error","name","MoreInfo","info","firstName","lastName","readOnly","value","description","address","streetAddress","city","state","zip","Add","display","setdisplay","email","setEmail","emailError","setEmailError","emailWrong","setEmailWrong","id","setId","idError","setIdError","idWrong","setIdWrong","setfirstName","firstNameError","setfirstNameError","firstNameWrong","setfirstNameWrong","setlastName","lastNameError","setlastNameError","lastNameWrong","setlastNameWrong","phone","setPhone","phoneError","setPhoneError","phoneWrong","setPhoneWrong","formValid","setFormValid","useEffect","className","onSubmit","e","preventDefault","type","onChange","target","placeholder","test","String","toLowerCase","getItem","Find","setValue","data","filter","item","firstNameCheck","includes","lastNameCheck","emailCheck","idCheck","phoneCheck","filtrData","Table","setItem","setdata","idsort","setidsort","firstNamesort","setfirstNamesort","lastNamesort","setlastNamesort","emailsort","setemailsort","phonesort","setphonesort","tableItems","map","index","datakey","sorted","concat","sort","a","b","parseInt","match","event","parentNode","hasAttribute","targetId","getAttribute","Pagination","onClickHandler","checkButtons","console","log","isloaded","howmanyPages","pagelist","Array","apply","length","idx","App","setisloaded","currentData","setcurrentData","sethowmanyPages","buttonID","setbuttonID","setAdditem","setbutdiss","isLoading","maxitems","pageCount","Math","ceil","onPagearr","slice","onPageData","arr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c1c5f69.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\nfunction Load( props ){\r\n    \r\n    const [data, setdata] = useState(null)\r\n    const [error, setError] = useState(null);\r\n\r\n    function getData (){\r\n        props.updateData(null, true)\r\n        fetch(props.url)\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n              props.updateData(result, \"done\")\r\n            },\r\n            (error) => {\r\n              setError(error);\r\n              props.updateData(null, \"error\")\r\n            }\r\n        )\r\n    }\r\n    return(\r\n        <button disabled={props.butdiss} onClick={getData}> {props.name } </button>\r\n    )\r\n }\r\n\r\nexport default  Load","import React, { useEffect, useState } from 'react';\r\n\r\nexport default function MoreInfo(props){\r\n  if (props.info){\r\n    return (\r\n        <div>\r\n        <p>Выбран пользователь: <b>{props.info.firstName + \" \" + props.info.lastName }</b></p> \r\n         Описание: \r\n         <textarea readOnly value={props.info.description}> \r\n         </textarea>\r\n         <p> Адрес проживания: <b>{props.info.address.streetAddress}</b></p> \r\n         <p>Город: <b>{props.info.address.city}</b></p>\r\n         <p>Провинция/штат: <b>{props.info.address.state}</b> </p>\r\n         <p>Индекс: <b>{props.info.address.zip}</b></p>\r\n        </div>\r\n    )\r\n  }\r\n    \r\n    else{\r\n        return null\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './add.css';\r\n\r\n\r\nexport default function Add(props) {\r\n    const [display, setdisplay] = useState(\"form-none\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n    const [emailWrong, setEmailWrong] = useState(true);\r\n    const [id, setId] = useState(\"\");\r\n    const [idError, setIdError] = useState(\"\");\r\n    const [idWrong, setIdWrong] = useState(true);\r\n    const [firstName, setfirstName] = useState(\"\");\r\n    const [firstNameError, setfirstNameError] = useState(\"\");\r\n    const [firstNameWrong, setfirstNameWrong] = useState(true);\r\n    const [lastName, setlastName] = useState(\"\");\r\n    const [lastNameError, setlastNameError] = useState(\"\");\r\n    const [lastNameWrong, setlastNameWrong] = useState(true);\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [phoneError, setPhoneError] = useState(\"\");\r\n    const [phoneWrong, setPhoneWrong] = useState(true);\r\n\r\n    const [formValid, setFormValid] = useState(false);\r\n\r\n\r\n    function AddForm() {\r\n        setdisplay(\"form-active\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (emailWrong || idWrong || firstNameWrong || lastNameWrong || phoneWrong) {\r\n            setFormValid(false)\r\n        } else {\r\n            setFormValid(true)\r\n        }\r\n    }, [emailWrong, idWrong, firstNameWrong, lastNameWrong, phoneWrong])\r\n\r\n\r\n    function emailHandler(e) {\r\n        setEmail(e.target.value)\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (!re.test(String(e.target.value).toLowerCase())) {\r\n            setEmailError(\"Некорректный email\")\r\n            setEmailWrong(true)\r\n        } else {\r\n            setEmailError(\"\")\r\n            setEmailWrong(false)\r\n        }\r\n    }\r\n\r\n    function idHandler(e) {\r\n        setId(e.target.value)\r\n        if (e.target.value) {\r\n            setIdError('')\r\n            setIdWrong(false)\r\n        } else {\r\n            setIdError('id не может быть пустым')\r\n            setIdWrong(true)\r\n        }\r\n    }\r\n\r\n    function firstNameHandler(e) {\r\n        setfirstName(e.target.value)\r\n        const re = /^[a-zA-Z]+$/\r\n        if (!re.test(String(e.target.value).toLowerCase())) {\r\n            setfirstNameError(\"Некорректное Имя\")\r\n            setfirstNameWrong(true)\r\n        } else {\r\n            setfirstNameError(\"\")\r\n            setfirstNameWrong(false)\r\n        }\r\n    }\r\n\r\n    function lastNameHandler(e) {\r\n        setlastName(e.target.value)\r\n        const re = /^[a-zA-Z]+$/\r\n        if (!re.test(String(e.target.value).toLowerCase())) {\r\n            setlastNameError(\"Некорректная фамилия\")\r\n            setlastNameWrong(true)\r\n        } else {\r\n            setlastNameError(\"\")\r\n            setlastNameWrong(false)\r\n        }\r\n    }\r\n    function phoneHandler(e) {\r\n        setPhone(e.target.value)\r\n        const re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im\r\n        if (!re.test(String(e.target.value).toLowerCase())) {\r\n            setPhoneError(\"Некорректный номер телефона\")\r\n            setPhoneWrong(true)\r\n        } else {\r\n            setPhoneError(\"\")\r\n            setPhoneWrong(false)\r\n        }\r\n    }\r\n\r\n    function AddItem(e) {\r\n\r\n        let value = {\r\n            id: id,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            phone: phone,\r\n            address: {\r\n                streetAddress: 'Данные неизвестны',\r\n                city: 'Данные неизвестны',\r\n                state: 'Данные неизвестны',\r\n                zip: 'Данные неизвестны'\r\n            },\r\n            description: 'Данные неизвестны',\r\n        }\r\n\r\n        props.getItem(value)\r\n        setId(\"\")\r\n        setEmail(\"\")\r\n        setfirstName(\"\")\r\n        setlastName(\"\")\r\n        setPhone(\"\")\r\n        setFormValid(false)\r\n        setIdWrong(true)\r\n        setEmailWrong(true)\r\n        setfirstNameWrong(true)\r\n        setlastNameWrong(true)\r\n        setPhoneWrong(true)\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={AddForm}>\r\n                Добавить\r\n            </button>\r\n            <form className={display} onSubmit={e => { e.preventDefault(); }}>\r\n                <label >\r\n                    <p>Id</p>\r\n                    <div>{idError}</div>\r\n                    <input type=\"number\" onChange={idHandler} value={id} name=\"id\" placeholder=\"Enter id\" />\r\n                </label>\r\n                <label >\r\n                    <p>firstName</p>\r\n                    <div>{firstNameError}</div>\r\n                    <input onChange={firstNameHandler} value={firstName} name=\"firstName\" type=\"text\" placeholder=\"Enter firstName\" />\r\n                </label>\r\n                <label >\r\n                    <p>lastName</p>\r\n                    <div>{lastNameError}</div>\r\n                    <input onChange={lastNameHandler} value={lastName} name=\"lasttName\" type=\"text\" placeholder=\"Enter lastName\" />\r\n                </label>\r\n                <label >\r\n                    <p>email</p>\r\n                    <div>{emailError}</div>\r\n                    <input onChange={emailHandler} value={email} name=\"email\" type=\"text\" placeholder=\"Enter your email\" />\r\n                </label>\r\n                <label >\r\n                    <p>phone</p>\r\n                    <div>{phoneError}</div>\r\n                    <input onChange={phoneHandler} value={phone} name=\"phone\" type=\"text\" placeholder=\"Enter phone\" />\r\n                </label>\r\n                <button onClick={AddItem} disabled={!formValid} >Добавить в таблицу</button>\r\n            </form>\r\n\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function Find(props){\r\nconst [value,setValue]=useState(\"\")\r\n\r\nfunction inputHandler(e){\r\n    setValue(e.target.value)\r\n}\r\n\r\nfunction findData(){\r\nlet result = props.data.filter(function(item){\r\n let firstNameCheck=item.firstName.toLowerCase().includes(value.toLowerCase())\r\n let lastNameCheck=item.lastName.toLowerCase().includes(value.toLowerCase())\r\n let emailCheck =item.email.toLowerCase().includes(value.toLowerCase())\r\n let idCheck =String(item.id).toLowerCase().includes(value.toLowerCase())\r\n let phoneCheck =item.phone.toLowerCase().includes(value.toLowerCase())\r\n if(firstNameCheck||lastNameCheck||emailCheck||idCheck||phoneCheck){\r\n     return true\r\n }\r\n else return false\r\n})\r\nprops.filtrData(result)\r\nsetValue(\"\")\r\n}\r\n\r\n return(\r\n    <div>\r\n        <input onChange={inputHandler} value={value} type=\"text\" placeholder=\"search...\"/>\r\n        <button onClick={findData}>Найти</button>\r\n    </div>\r\n\r\n )\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport MoreInfo from './MoreInfo';\r\nimport './table.css';\r\nimport Add from \"./Add\";\r\nimport Find from \"./Find\";\r\n\r\nfunction Table(props) {\r\n  const [item, setItem] = useState(false )\r\n  const [data, setdata] = useState(props.data);\r\n  const [idsort, setidsort] = useState(\"\")\r\n  const [firstNamesort, setfirstNamesort] = useState(\"\")\r\n  const [lastNamesort, setlastNamesort] = useState(\"\")\r\n  const [emailsort, setemailsort] = useState(\"\")\r\n  const [phonesort, setphonesort] = useState(\"\")\r\n\r\nuseEffect(() => {\r\n  setdata(props.data)\r\n  setidsort(\"\")\r\n  setfirstNamesort(\"\")\r\n  setlastNamesort(\"\")\r\n  setemailsort(\"\")\r\n  setphonesort(\"\")\r\n}, [props.data])\r\n\r\n\r\n  let datakey=0\r\n    let tableItems=data.map((item,index) =>\r\n      <tr datakey={index} key={index}>\r\n         <td>{item.id}</td>\r\n         <td>{item.firstName}</td>\r\n         <td>{item.lastName}</td>\r\n         <td>{item.email}</td>\r\n         <td>{item.phone}</td>\r\n     </tr>\r\n       );\r\n    \r\n\r\n  function showData(event){\r\n    if (event.target.parentNode.hasAttribute(\"datakey\")){\r\n      let targetId= event.target.parentNode.getAttribute(\"datakey\")\r\n      setItem(data[targetId])\r\n      }\r\n   } \r\n    \r\n\r\n  function sortId(e) {\r\n  if(idsort==\"\"||idsort==\"по убыванию\"){\r\n    let sorted=[].concat(props.data)\r\n    sorted.sort(function(a, b) {\r\n      return a.id - b.id;\r\n      });\r\n    setdata(sorted)\r\n    setidsort(\"по возрастанию\")\r\n    }else{\r\n      let sorted=[].concat(props.data)\r\n      sorted.sort(function(a, b) {\r\n        return b.id - a.id;\r\n        });\r\n    setdata(sorted)\r\n    setidsort(\"по убыванию\")\r\n    }\r\n  }\r\n\r\n      function sortfirstName(e) {\r\n        if(firstNamesort==\"\"||firstNamesort==\"по убыванию\"){\r\n          let sorted=[].concat(props.data)\r\n          sorted.sort(function(a, b) {\r\n            if (a.firstName < b.firstName) \r\n            return -1\r\n          if (a.firstName >b.firstName)\r\n            return 1\r\n          return 0 \r\n           });\r\n         setdata(sorted)\r\n         setfirstNamesort(\"по возрастанию\")\r\n        }else{\r\n          let sorted=[].concat(props.data)\r\n          sorted.sort(function(a, b) {\r\n            if (b.firstName < a.firstName) \r\n            return -1\r\n          if (b.firstName >a.firstName)\r\n            return 1\r\n          return 0 \r\n           });\r\n         setdata(sorted)\r\n         setfirstNamesort(\"по убыванию\")\r\n        }\r\n        }\r\n\r\n        function sortemail(e) {\r\n          if(emailsort==\"\"||emailsort==\"по убыванию\"){\r\n            let sorted=[].concat(props.data)\r\n            sorted.sort(function(a, b) {\r\n              if (a.email < b.email) \r\n              return -1\r\n            if (a.email >b.email)\r\n              return 1\r\n            return 0 \r\n             });\r\n           setdata(sorted)\r\n           setemailsort(\"по возрастанию\")\r\n          }else{\r\n            let sorted=[].concat(props.data)\r\n            sorted.sort(function(a, b) {\r\n              if (b.email < a.email) \r\n              return -1\r\n            if (b.email >a.email)\r\n              return 1\r\n            return 0 \r\n             });\r\n           setdata(sorted)\r\n           setemailsort(\"по убыванию\")\r\n          }\r\n          }    \r\n\r\n          function sortlastName(e) {\r\n            if(lastNamesort==\"\"||lastNamesort==\"по убыванию\"){\r\n              let sorted=[].concat(props.data)\r\n              sorted.sort(function(a, b) {\r\n                if (a.lastName < b.lastName) \r\n                return -1\r\n              if (a.lastName >b.lastName)\r\n                return 1\r\n              return 0 \r\n               });\r\n             setdata(sorted)\r\n             setlastNamesort(\"по возрастанию\")\r\n            }else{\r\n              let sorted=[].concat(props.data)\r\n              sorted.sort(function(a, b) {\r\n                if (b.lastName < a.lastName) \r\n                return -1\r\n              if (b.lastName >a.lastName)\r\n                return 1\r\n              return 0 \r\n               });\r\n             setdata(sorted)\r\n             setlastNamesort(\"по убыванию\")\r\n            }\r\n            }      \r\n            function sortPhone(e) {\r\n              if(phonesort==\"\"||phonesort==\"по убыванию\"){\r\n                let sorted=[].concat(props.data)\r\n                sorted.sort(function(a, b) {\r\n                  return parseInt(a.phone.match(/\\d+/)) - parseInt( b.phone.match(/\\d+/));\r\n                  });\r\n                setdata(sorted)\r\n                setphonesort(\"по возрастанию\")\r\n                }else{\r\n                  let sorted=[].concat(props.data)\r\n                  sorted.sort(function(a, b) {\r\n                    return parseInt(b.phone.match(/\\d+/)) - parseInt( a.phone.match(/\\d+/));\r\n                    });\r\n                setdata(sorted)\r\n                setphonesort(\"по убыванию\")\r\n                }\r\n              }\r\n    function filtrData(value) {\r\n      setdata(value)\r\n      \r\n    }       \r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Find filtrData={filtrData} data={props.data}/>\r\n        <Add getItem={props.getItem} />\r\n    <table className=\"main-table\">\r\n        <thead>\r\n        <tr >\r\n        <td onClick={sortId}>id {idsort}</td>\r\n        <td onClick={sortfirstName}>firstName {firstNamesort}</td>\r\n        <td onClick={sortlastName}>lastName {lastNamesort}</td>\r\n        <td onClick={sortemail}>email {emailsort}</td>\r\n        <td onClick={sortPhone}>phone {phonesort}</td>\r\n        </tr>\r\n        </thead>\r\n        <tbody onClick={showData}>{tableItems}</tbody>\r\n    </table>\r\n    <MoreInfo info={item}/>\r\n    </>\r\n      )\r\n    }\r\n\r\n\r\n  export default  Table","import React, { useState } from 'react';\r\nimport './pagination.css';\r\n\r\nexport default function Pagination(props){\r\n    function onClickHandler(event){\r\n        props.checkButtons(event.target.id)\r\n        console.log(event.target.id)\r\n    }\r\n    if(props.isloaded!=\"done\"|| props.howmanyPages < 2){\r\n        return null\r\n    } else{\r\n        let pagelist=Array.apply(null, { length: props.howmanyPages }).map((item, idx) => (\r\n            <li key={idx}>\r\n             <button onClick={onClickHandler} id={idx}>\r\n               {idx+1}\r\n             </button>\r\n             </li>\r\n           ));\r\n         return(\r\n          <ul className=\"pagelist\">\r\n              {pagelist}\r\n          </ul>\r\n         )\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Load from './components/Load';\nimport Table from './components/Table';\nimport Pagination from \"./components/Pagination\";\n\n\n\nfunction App() {\n  const [data, setdata] = useState(0)\n  const [isloaded, setisloaded] = useState(false)\n  const [currentData, setcurrentData] = useState(null)\n  const [howmanyPages, sethowmanyPages] = useState(0);\n  const [buttonID, setbuttonID] = useState(0)\n  const [addItem, setAdditem] = useState(\"\");\n  const [butdiss, setbutdiss] = useState(false);\n\n  useEffect(() => {\n   if(isloaded===true){\n     setbutdiss(true)\n   }else setbutdiss(false)\n  }, [isloaded]);\n\n  function updateData(value, isLoading) {\n    if (isLoading == \"done\") {\n      setdata(value)\n      setbuttonID(0)\n    }\n    setisloaded(isLoading)\n  }\n\n  useEffect(() => {\n    if (data != 0) {\n      onPageData(buttonID)\n    }\n  }, [data, buttonID]);\n\n\n  function onPageData(buttonID) {\n    let maxitems = 30;\n    let pageCount = Math.ceil(data.length / maxitems)\n    if (pageCount) {\n      sethowmanyPages(pageCount)\n    }\n    let count = buttonID\n    let onPagearr = data.slice(buttonID * maxitems, (+buttonID + 1) * maxitems)\n    setcurrentData(onPagearr)\n  }\n\n  function checkButtons(value) {\n    setbuttonID(value)\n  }\n\n  function getItem(value) {\n    setAdditem(value)\n    let arr = data\n    arr = [value].concat(arr)\n    setdata(arr)\n  }\n\n\n  \n\n  return (\n    <div className=\"app\">\n      <div>\n      <Load butdiss={butdiss} updateData={updateData} name=\"Скачать большой объем данных\" url=\"http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}\" />\n      <Load butdiss={butdiss} updateData={updateData} name=\"Скачать малый объем данных\" url=\"http://www.filltext.com/?rows=32&id=%7Bnumber%7C1000%7D&firstName=%7BfirstName%7D&lastName=%7BlastName%7D&email=%7Bemail%7D&phone=%7Bphone%7C(xxx)xxx-xx-xx%7D&address=%7BaddressObject%7D&description=%7Blorem%7C32%7D\" />\n      </div>\n      { isloaded === \"done\" && < Table getItem={getItem} isloaded={isloaded} data={currentData} />}\n      {isloaded === true && <p>Загрузка</p>}\n      {isloaded === \"error\" && <p>Ошибка загрузки. Попробуйте еще раз</p>}\n      <Pagination isloaded={isloaded} howmanyPages={howmanyPages} checkButtons={checkButtons} />\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}